import { Component, Inject, OnInit } from '@angular/core';

import {
  MatDialog,
  MAT_DIALOG_DATA,
  MatDialogRef,
} from '@angular/material/dialog';
import { select, Store } from '@ngrx/store';
import { Observable } from 'rxjs';
import { messagesSelector } from 'src/app/store/app.selectors';
import { AppStateInterface } from 'src/app/store/store.model';
import { MessageDto } from '../model/messsage.model';
import { MessageDialogComponent } from './message-dialog/message-dialog.component';
import * as AppActions from './../../store/app.actions';

@Component({
  selector: 'app-messages',
  templateUrl: './messages.component.html',
  styleUrls: ['./messages.component.css'],
})
export class MessagesComponent implements OnInit {
  messages$: Observable<MessageDto[]>;
  constructor(
    public dialog: MatDialog,
    private store: Store<AppStateInterface>
  ) {
    this.messages$ = this.store.pipe(select(messagesSelector));
  }

  openDialog(): void {
    const dialogRef = this.dialog.open(MessageDialogComponent, {
      panelClass: 'custom-modalbox',
    });

    dialogRef.afterClosed().subscribe((result) => {
      console.log('The dialog was closed');
    });
  }

  onRemoveMsg(autogeneratedID) {
    this.store.dispatch(
      AppActions.removeMessage({
        autogeneratedID,
      })
    );
  }

  displayedColumns: string[] = ['autogeneratedID', 'name', 'message', 'action'];

  ngOnInit() {}
}
